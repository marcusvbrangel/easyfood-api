

========================================================================================

Ctrl + /                                Comment/uncomment with line comment
Ctrl + Alt + O                          Optimize imports
Ctrl + Alt + I                          Auto-indent line(s)

Ctrl + D                                Duplicate current line or selected block
Ctrl + Y                                Delete line at caret
Shift + Enter                           Start new line

Ctrl + Shift + seta para cima/baixo     Mover linha/bloco

Alt + Enter                             Importar

========================================================================================


Spring Initializer
https://start.spring.io/

Spring Boot Reference Documentation
https://docs.spring.io/spring-boot/docs/current/reference/html/index.html

Common Application Properties
https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties


SDKMAN - The Software Development Kit Manager
https://sdkman.io/


The Spring PetClinic Community
https://spring-petclinic.github.io/
https://github.com/spring-petclinic



Postman Learning Center
https://learning.postman.com/docs/introduction/overview/


WIRE MOCK CLOUD
https://www.wiremock.io/

LOCALSTACK
https://www.localstack.cloud/

NGROK
https://ngrok.com/

BAELDUNG
https://www.baeldung.com/


NOTA FACIL
O jeito mais fácil de emitir suas notas fiscais
https://notafacil.io/



========================================================================================


Spring Boot Maven Plugin Documentation
https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/





========================================================================================

docker pull mysql:8.0.4

docker image rm 8251f0669c6e

docker image ls




========================================================================================

Spring Data JPA
https://docs.spring.io/spring-data/jpa/reference/index.html

JPA Query Methods
https://docs.spring.io/spring-data/jpa/reference/jpa/query-methods.html


========================================================================================

git version

git init

git status

git add .

git commit -m "feat: initial commit"

git switch -c development

git branch

git config --global user.email "marcus.vbrangel@gmail.com"

git config --global user.name "Marcus Rangel"


========================================================================================

…or create a new repository on the command line

echo "# easyfood-api" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:marcusvbrangel/easyfood-api.git
git push -u origin main


========================================================================================

…or push an existing repository from the command line

git remote add origin git@github.com:marcusvbrangel/easyfood-api.git
git branch -M main
git push -u origin main


git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.




========================================================================================


Fixing the Github Permission denied issue | Github SSH Key setup
https://www.youtube.com/watch?v=TviP5rCZiy0

Generating a new SSH key and adding it to the ssh-agent
https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent




========================================================================================

POSTGRES

The PostgreSQL object-relational database system provides reliability and data integrity.

https://hub.docker.com/_/postgres



docker pull postgres:13.14-bullseye

docker pull postgres:14.6


docker container run -d \
	--name postgres-local \
	-e POSTGRES_PASSWORD=1234 \
	-p 5432:5432 \
	-e PGDATA=/var/lib/postgresql/data/pgdata \
	-v /home/wolf/pgdata/mount:/var/lib/postgresql/data \
	--restart unless-stopped \
	postgres:14.6





elestio/pgadmin
https://hub.docker.com/r/elestio/pgadmin



pgAdmin - PostgreSQL Tools
https://www.pgadmin.org/




========================================================================================


2.5.6.2 More Topics on Deploying MySQL Server with Docker
https://dev.mysql.com/doc/refman/8.0/en/docker-mysql-more-topics.html



========================================================================================


DBeaver Community 24.0.3

https://dbeaver.io/download/


========================================================================================

export SERVER_PORT=8090

echo $SERVER_PORT



========================================================================================


{
    "timestamp": "2024-05-11T20:01:05.661+00:00",
    "status": 404,
    "error": "Not Found",
    "message": "No message available",
    "path": "/cozinhas/2"
}

========================================================================================


v14.21.3

v16.20.2

v18.20.2

v20.13.1

nvm ls

nvm ls-remote

nvm install v14.21.3

nvm use node v18.20.2

========================================================================================

What is Postman?
https://www.postman.com/product/what-is-postman/

Get started in Postman
https://learning.postman.com/docs/getting-started/overview/

API platform
https://www.postman.com/api-platform/

API repository
https://www.postman.com/product/api-repository/

Tools
https://www.postman.com/product/tools/

Governance
https://www.postman.com/product/governance/

Postman integrations
https://www.postman.com/product/integrations/

Case studies
https://www.postman.com/case-studies/whatsapp/

YouTube - Official
https://www.youtube.com/c/Postman

Postman documentation overview
https://learning.postman.com/docs/introduction/overview/

Welcome to Postman Academy!
https://academy.postman.com/
Self-Study Learning
https://academy.postman.com/page/self-study-learning

Blog
https://blog.postman.com/

Speed up your work with Postman templates
https://www.postman.com/templates/

Guide to API-first
https://www.postman.com/api-first/


Postman Echo API
https://www.postman.com/postman/workspace/published-postman-templates/documentation/631643-f695cab7-6878-eb55-7943-ad88e1ccfd65?ctx=documentation

Discover APIs, workspaces, collections, and Flows on the Postman API Network
https://learning.postman.com/docs/getting-started/first-steps/exploring-public-api-network/
https://www.postman.com/explore


API authentication and authorization in Postman
https://learning.postman.com/docs/sending-requests/authorization/authorization/

Add and manage CA and client certificates in Postman
https://learning.postman.com/docs/sending-requests/authorization/certificates/

Add API authorization details to requests in Postman
https://learning.postman.com/docs/sending-requests/authorization/specifying-authorization-details/

Set up authorization for public APIs using Guided Auth
https://learning.postman.com/docs/sending-requests/authorization/authentication-for-public-apis/

Authorization types supported by Postman
https://learning.postman.com/docs/sending-requests/authorization/authorization-types/

Authenticate with Digest access authentication in Postman
https://learning.postman.com/docs/sending-requests/authorization/digest-auth/

Authenticate with OAuth 1.0 authentication in Postman
https://learning.postman.com/docs/sending-requests/authorization/oauth-10/

Authenticate with OAuth 2.0 authentication in Postman
https://learning.postman.com/docs/sending-requests/authorization/oauth-20/

Authenticate with Hawk access authentication in Postman
https://learning.postman.com/docs/sending-requests/authorization/hawk-authentication/

Authenticate with AWS Signature authentication workflow in Postman
https://learning.postman.com/docs/sending-requests/authorization/aws-signature/






========================================================================================


Directories used by the IDE to store settings, caches, plugins and logs
https://intellij-support.jetbrains.com/hc/en-us/articles/206544519-Directories-used-by-the-IDE-to-store-settings-caches-plugins-and-logs


    Configuration (idea.config.path): ~/.config/JetBrains/IntelliJIdea2022.2
    Plugins (idea.plugins.path): ~/.local/share/JetBrains/IntelliJIdea2022.2
    System (idea.system.path): ~/.cache/JetBrains/IntelliJIdea2022.2
    Logs (idea.log.path): ~/.cache/JetBrains/IntelliJIdea2022.2/log





========================================================================================




CURL
https://curl.se/

curl tutorial
https://curl.se/docs/tutorial.html

Video presentations
https://curl.se/docs/videos/

Mastering the curl command line with Daniel Stenberg
https://www.youtube.com/watch?v=V5vZWHP-RqU




========================================================================================

Create a Linux launcher icon

To start the app from a launcher icon, install the desktop file, located in the bundle, into an applications subdirectory of a path contained in $XDG_DATA_DIRS (for example ~/.local/share/applications/):

install -t ~/.local/share/applications/ /</path/to/file>/Postman/app/resources/Postman.desktop

Enter the following content in the file, replacing </path/to/file> with the location of the file, and save it:

[Desktop Entry]
Encoding=UTF-8
Name=Postman
Exec=</path/to/file>/Postman/app/Postman %U
Icon=</path/to/file>/Postman/app/resources/app/assets/icon.png
Terminal=false
Type=Application
Categories=Development;




========================================================================================

https://coffops.com/como-alterar-o-prompt-de-comando-do-terminal-linux/

https://www.bosontreinamentos.com.br/linux/certificacao-lpic-1/como-configurar-o-prompt-do-terminal-com-a-variavel-de-ambiente-ps1-no-linux/

echo $PS1
\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$


\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\][\033[00m\]\$


export PS1="\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\[\033[00m\]\$"

========================================================================================









